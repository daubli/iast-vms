package de.vms.vulnerability.model;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import javax.persistence.*;

import de.vms.incident.model.Incident;

@Entity
public class Vulnerability {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private UUID id;

    @Enumerated(EnumType.ORDINAL)
    Severity severity;

    @Enumerated(EnumType.ORDINAL)
    VulnerabilityType type;

    String description;

    LocalDateTime lastDetected;

    LocalDateTime firstDetected;

    @Enumerated(EnumType.STRING)
    VulnerabilityStatus status;

    @OneToMany(mappedBy = "vulnerability", fetch = FetchType.EAGER, cascade = CascadeType.ALL)
    List<Incident> incidents = new ArrayList<>();

    public UUID getId() {
        return id;
    }

    public void setId(UUID id) {
        this.id = id;
    }

    public Severity getSeverity() {
        return severity;
    }

    public void setSeverity(Severity severity) {
        this.severity = severity;
    }

    public VulnerabilityType getType() {
        return type;
    }

    public void setType(VulnerabilityType type) {
        this.type = type;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public LocalDateTime getLastDetected() {
        return lastDetected;
    }

    public void setLastDetected(LocalDateTime lastDetected) {
        this.lastDetected = lastDetected;
    }

    public LocalDateTime getFirstDetected() {
        return firstDetected;
    }

    public void setFirstDetected(LocalDateTime firstDetected) {
        this.firstDetected = firstDetected;
    }

    public List<Incident> getIncidents() {
        return incidents;
    }

    public void setIncidents(List<Incident> incident) {
        this.incidents = incident;
    }

    public void addIncident(Incident incident) {
        incidents.add(incident);
        incident.setVulnerability(this);
    }

    public void removeIncident(Incident incident) {
        incidents.remove(incident);
        incident.setVulnerability(null);
    }

    public VulnerabilityStatus getStatus() {
        return status;
    }

    public void setStatus(VulnerabilityStatus status) {
        this.status = status;
    }
}
